fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
fafa_c %>%
mutate(., condition = as.factor(condition),
condition = fct_relevel(condition, c('fafa', 'fafal')))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1)
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1))
head(fafa_c)
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
head(fafa_c)
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress %>%
ggplot(., aes(x = proficiency, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress
mean(mod_int$residuals)
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
mod_prof <- glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_prof)
mod_cond <- glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_cond)
mod_add <- glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_add)
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
mean(mod_int$residuals)
autoplot(mod_int, which = c(1,3))
autoplot(mod_int, which = c(2,2)) #check numbers. copied from diagnostics r script
acf(mod_int$residuals)
lmtest::dwtest(mod_int)
cor.test(fafa_c$x, mod_int$residuals)
qqplots(mod_int)
qqnorm(mod_int)
qqline(mod_int)
qqplots(mod_int)
qqnorm(mod_int)
cor.test(fafa_c$x, mod_int$residuals)
plot(fitted(mod_int), residuals(mod_int))
acf(mod_int$residuals)
anova(mod_null, mod_cond, test ="Chisq")
lmtest::dwtest(mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
summary(mod_int)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
library(tidyverse)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
mod_prof <- glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_cond <- glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_add <- glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
chisq.test(mod_null, mod_cond)
anova(mod_add, mod_int)
anova(mod_null, mod_cond)
anova(mod_null, mod_cond, test ="Chisq")
summary(mod_int)$r.squared
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
summary(mod_int)$coefficients
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
library(tidyverse)
library(tidyverse)
library(tidyverse)
read_csv("./data/data.csv")
fafa_df <- read_csv("./data/data.csv")
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_prof)
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_cond)
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_add)
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_int)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 1,
ifelse(condition == "fafa", 0, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 1,
ifelse(condition == "fafal", 0, NA)))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
mod_prof <- glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_cond <- glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_add <- glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
r.squaredGLMM(mod_add)
r.squaredGLMM(mod_int)
MuMln::r.squaredGLMM(mod_int)
r2glmm::r.squaredGLMM(mod_int)
Library(r2glmm)
install.packages("r2glmm")
Library(r2glmm)
library("r2glmm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:r2glmm", unload=TRUE)
library("r2glmm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
r.squaredGLMM(mod_int)
MuMIn::r.squaredGLMM(mod_int)
install.packages("MuMIn")
MuMIn::r.squaredGLMM(mod_int)
MuMIn::r.squaredGLMM(mod_cond)
MuMIn::r.squaredGLMM(mod_cond)
MuMIn::r.squaredGLMM(mod_null)
MuMIn::r.squaredGLMM(mod_prof)
MuMIn::r.squaredGLMM(mod_add)
fafa_df %>%
ggplot(., aes(x = proficiency, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 1,
ifelse(condition == "fafal", 0, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
fafa_df %>%
ggplot(., aes(x = proficiency, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
install.packages("rsq")
library(rsq)
rsq(mod_int)
rsq(mod_add)
rsq(mod_cond)
rsq(mod_prof)
plot(fitted(mod_int), residuals(mod_int))
hist(residuals(mod_int))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., condition = fct_relevel(prof, "fafal"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., condition = fct_relevel(condition, "fafal"))
head(fafa_c)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
summary(mod_int)
summary(mod_int)
head(fafa_c)
lmtest::dwtest(mod_int)
summary(mod_null)$coef
summary(mod_prof)$coef
summary(mod_cond)$coef
summary(mod_add)$coef
summary(mod_int)$coef
sum_best_mod_int <- summary(mod_int)$coef
rsq(mod_null)
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_null, mod_prof, test ="Chisq")
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_add, mod_int,   test ="Chisq")
summary(mod_int)
span_stress
confint(mod_int)
confint(mod_int)$conditionfafal
confint(mod_int)$condition
confint(mod_int)$proficiency
span_stress
span_stress
span_stress
span_stress ##fix
span_stress
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggsave)
library(ggfortify)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
poisson_reg
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggplot2)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggplot2)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( span_stress = "../figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( "../figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress
source("./figs/span_stress.png")
library(here)
source("./figs/span_stress.png")
source("./figs/span_stress.png")
span_stress
getwd()
getwd()
span_stress
span_stress
span_stress
library(ggplot2)
library(rsq)
source("../scripts/libs.R")
source("../scripts/poisson_regression.R")
source("./scripts/poisson_regression.R")
mod_int %>%
tidy(.) %>%
kable(., format = "latex", digits = 2)
poisson_reg
source("./scripts/poisson_regression.R")
source("../scripts/poisson_regression.R")
source(".../scripts/poisson_regression.R")
source("/scripts/poisson_regression.R")
source("./scripts/poisson_regression.R")
source("../scripts/rp_test.R")
source("./scripts/rp_test.R")
source("./scripts/rp_test.r")
source("../scripts/rp_test.R")
span_stress
source("./research_project/scripts/rp_test.R")
source("../research_project/scripts/rp_test.R")
source("./research_project/.scripts/rp_test.R")
source("./research_project/.scripts/rp_test.R")
source("./research_project/..scripts/rp_test.R")
source("./../scripts/rp_test.R")
source("../scripts/rp_test.R")
setwd()
source("../scripts/poisson_regression.R")
source("./scripts/rp_test.R")
source("../scripts/rp_test.R")
source("./scripts/rp_test.R")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("../figs/span_stress.png")
``` {r, fig.align="center", out.width= "400px", out.height= "400px", cache=FALSE, echo=FALSE, retina=2}
knitr::include_graphics("../figs/span_stress.png")
ggsave( "./figs/span_stress.png",
plot = span_stress8x4,
width = 8, height = 4,
unit = "in")
ggsave( "./figs/span_stress8x4.png",
plot = span_stress8x4,
width = 8, height = 4,
unit = "in")
ggsave( "./figs/span_stress8x4.png",
plot = span_stress,
width = 8, height = 4,
unit = "in")
knitr::include_graphics("../figs/span_stress8x4.png")
ggsave( "./figs/span_stress6x4.png",
plot = span_stress,
width = 6, height = 4,
unit = "in")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
