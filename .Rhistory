data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
mod_prof <- glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_cond <- glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_add <- glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
chisq.test(mod_null, mod_cond)
anova(mod_add, mod_int)
anova(mod_null, mod_cond)
anova(mod_null, mod_cond, test ="Chisq")
summary(mod_int)$r.squared
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
summary(mod_int)$coefficients
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
library(tidyverse)
library(tidyverse)
library(tidyverse)
read_csv("./data/data.csv")
fafa_df <- read_csv("./data/data.csv")
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_prof)
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_cond)
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_add)
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_int)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
summary(mod_null)
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 0,
ifelse(condition == "fafa", 1, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafal", 1,
ifelse(condition == "fafa", 0, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 1,
ifelse(condition == "fafal", 0, NA)))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 0,
ifelse(condition == "fafal", 1, NA)))
glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
mod_null <- glm(propOxytone ~ 1,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
mod_prof <- glm(propOxytone ~ proficiency_c,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_cond <- glm(propOxytone ~ condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_add <- glm(propOxytone ~ proficiency_c + condition,
data = fafa_c,
family = gaussian(link = "identity"))
glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
mod_int <- glm(propOxytone ~ proficiency_c + condition + proficiency_c:condition,
data = fafa_c,
family = gaussian(link = "identity"))
r.squaredGLMM(mod_add)
r.squaredGLMM(mod_int)
MuMln::r.squaredGLMM(mod_int)
r2glmm::r.squaredGLMM(mod_int)
Library(r2glmm)
install.packages("r2glmm")
Library(r2glmm)
library("r2glmm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:r2glmm", unload=TRUE)
library("r2glmm", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
r.squaredGLMM(mod_int)
MuMIn::r.squaredGLMM(mod_int)
install.packages("MuMIn")
MuMIn::r.squaredGLMM(mod_int)
MuMIn::r.squaredGLMM(mod_cond)
MuMIn::r.squaredGLMM(mod_cond)
MuMIn::r.squaredGLMM(mod_null)
MuMIn::r.squaredGLMM(mod_prof)
MuMIn::r.squaredGLMM(mod_add)
fafa_df %>%
ggplot(., aes(x = proficiency, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse(condition == "fafa", 1,
ifelse(condition == "fafal", 0, NA)))
fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
fafa_df %>%
ggplot(., aes(x = proficiency, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
install.packages("rsq")
library(rsq)
rsq(mod_int)
rsq(mod_add)
rsq(mod_cond)
rsq(mod_prof)
plot(fitted(mod_int), residuals(mod_int))
hist(residuals(mod_int))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., condition = fct_relevel(prof, "fafal"))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., condition = fct_relevel(condition, "fafal"))
head(fafa_c)
anova(mod_null, mod_prof, mod_cond, mod_add, mod_int, test ="Chisq")
summary(mod_int)
summary(mod_int)
head(fafa_c)
lmtest::dwtest(mod_int)
summary(mod_null)$coef
summary(mod_prof)$coef
summary(mod_cond)$coef
summary(mod_add)$coef
summary(mod_int)$coef
sum_best_mod_int <- summary(mod_int)$coef
rsq(mod_null)
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_null, mod_prof, test ="Chisq")
anova(mod_null, mod_cond, test ="Chisq")
anova(mod_add, mod_int,   test ="Chisq")
summary(mod_int)
span_stress
confint(mod_int)
confint(mod_int)$conditionfafal
confint(mod_int)$condition
confint(mod_int)$proficiency
span_stress
span_stress
span_stress
span_stress ##fix
span_stress
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggsave)
library(ggfortify)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress <- fafa_c %>%
ggplot(., aes(x = proficiency_c, y = propOxytone, color = condition)) +
geom_point() +
geom_smooth(method = lm)
span_stress
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
poisson_reg
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggplot2)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
library(ggplot2)
ggsave(span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( span_stress = "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( span_stress = "../figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( "../figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
ggsave( "./figs/span_stress.png",
plot = span_stress,
width = 10, height = 4,
unit = "in")
span_stress
source("./figs/span_stress.png")
library(here)
source("./figs/span_stress.png")
source("./figs/span_stress.png")
span_stress
getwd()
getwd()
span_stress
span_stress
span_stress
library(ggplot2)
library(rsq)
source("../scripts/libs.R")
source("../scripts/poisson_regression.R")
source("./scripts/poisson_regression.R")
mod_int %>%
tidy(.) %>%
kable(., format = "latex", digits = 2)
poisson_reg
source("./scripts/poisson_regression.R")
source("../scripts/poisson_regression.R")
source(".../scripts/poisson_regression.R")
source("/scripts/poisson_regression.R")
source("./scripts/poisson_regression.R")
source("../scripts/rp_test.R")
source("./scripts/rp_test.R")
source("./scripts/rp_test.r")
source("../scripts/rp_test.R")
span_stress
source("./research_project/scripts/rp_test.R")
source("../research_project/scripts/rp_test.R")
source("./research_project/.scripts/rp_test.R")
source("./research_project/.scripts/rp_test.R")
source("./research_project/..scripts/rp_test.R")
source("./../scripts/rp_test.R")
source("../scripts/rp_test.R")
setwd()
source("../scripts/poisson_regression.R")
source("./scripts/rp_test.R")
source("../scripts/rp_test.R")
source("./scripts/rp_test.R")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("./figs/span_stress.png")
knitr::include_graphics("../figs/span_stress.png")
``` {r, fig.align="center", out.width= "400px", out.height= "400px", cache=FALSE, echo=FALSE, retina=2}
knitr::include_graphics("../figs/span_stress.png")
ggsave( "./figs/span_stress.png",
plot = span_stress8x4,
width = 8, height = 4,
unit = "in")
ggsave( "./figs/span_stress8x4.png",
plot = span_stress8x4,
width = 8, height = 4,
unit = "in")
ggsave( "./figs/span_stress8x4.png",
plot = span_stress,
width = 8, height = 4,
unit = "in")
knitr::include_graphics("../figs/span_stress8x4.png")
ggsave( "./figs/span_stress6x4.png",
plot = span_stress,
width = 6, height = 4,
unit = "in")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
knitr::include_graphics("../figs/span_stress6x4.png")
devtools::install_github("yihui/xaringan")
install.packages(c("DBI", "Formula", "MASS", "Matrix", "R.oo", "bindr", "bindrcpp", "blogdown", "broom", "callr", "cluster", "curl", "data.table", "foreign", "ggfortify", "ggridges", "hms", "htmlwidgets", "httpuv", "later", "learnr", "lmtest", "lubridate", "nlme", "pillar", "plogr", "psych", "readxl", "selectr", "sourcetools", "stringi", "survival", "tinytex", "viridis", "withr", "yaml"))
install.packages(c("DBI", "Formula", "MASS", "Matrix", "R.oo", "bindr", "bindrcpp", "blogdown", "broom", "callr", "cluster", "curl", "data.table", "foreign", "ggfortify", "ggridges", "hms", "htmlwidgets", "httpuv", "later", "learnr", "lmtest", "lubridate", "nlme", "pillar", "plogr", "psych", "readxl", "selectr", "sourcetools", "stringi", "survival", "tinytex", "viridis", "withr", "yaml"))
install.packages(c("DBI", "Formula", "MASS", "Matrix", "R.oo", "bindr", "bindrcpp", "blogdown", "broom", "callr", "cluster", "curl", "data.table", "foreign", "ggfortify", "ggridges", "hms", "htmlwidgets", "httpuv", "later", "learnr", "lmtest", "lubridate", "nlme", "pillar", "plogr", "psych", "readxl", "selectr", "sourcetools", "stringi", "survival", "tinytex", "viridis", "withr", "yaml"))
options(htmltools.dir.version = FALSE)
library(tidyverse)
span_stress
mean(mod_int$residuals)
plot(fitted(mod_int), residuals(mod_int))
acf(mod_int$residuals)
# lmtest::dwtest(mod_int)
acf(mod_int$residuals)
acf(mod_int$residuals)
qqline(residuals(mod_int))
hist(residuals(mod_int))
qqnorm(residuals(mod_int))
qqline(residuals(mod_int))
knitr::opts_chunk$set(echo = TRUE)
read_csv("./data_raw/pa_5_data/lang_data_raw.csv")
df_raw <- read_csv("./data_raw/pa_5_data/lang_data_raw.csv")
df_tidy %>%
ggplot(., aes(x = composite_c, y = prof, color = age)) +
geom_hline(yintercept = 0.60205, lty = 2, size = 0.25, color = "grey60") + # from fitted model below
geom_vline(xintercept = 0, lty = 2, size = 0.25, color = "grey60") +       # from fitted model below
geom_point() +
geom_smooth(method = lm, se = F, fullrange = T) +
geom_abline(intercept = 0.60205, slope = 0.67977, lty = 3) + # from fitted model below
scale_color_brewer(palette = "Set2") +
theme_test(base_size = 16, base_family = 'Times')
df_tidy %>%
group_by(., age) %>%
summarize(prof_mean = mean(prof), prof_sd = sd(prof),
comp_mean = mean(composite_score), comp_sd = sd(composite_score)) %>%
knitr::kable(., format = 'markdown')
df_raw %>%
separate(., id, into = c('id', 'gender', 'age'), sep = '_') %>%  # separate id column
mutate(., composite_score = log(iq / 80) + log(motivation),      # create composite_score
composite_c = composite_score - mean(composite_score), # center it
age_sum = if_else(age == 'younger', 1, -1))
df_tidy <- df_raw %>%
separate(., id, into = c('id', 'gender', 'age'), sep = '_') %>%  # separate id column
mutate(., composite_score = log(iq / 80) + log(motivation),      # create composite_score
composite_c = composite_score - mean(composite_score), # center it
age_sum = if_else(age == 'younger', 1, -1))
df_tidy %>%
group_by(., age) %>%
summarize(prof_mean = mean(prof), prof_sd = sd(prof),
comp_mean = mean(composite_score), comp_sd = sd(composite_score)) %>%
knitr::kable(., format = 'markdown')
df_tidy %>%
ggplot(., aes(x = composite_c, y = prof, color = age)) +
geom_hline(yintercept = 0.60205, lty = 2, size = 0.25, color = "grey60") + # from fitted model below
geom_vline(xintercept = 0, lty = 2, size = 0.25, color = "grey60") +       # from fitted model below
geom_point() +
geom_smooth(method = lm, se = F, fullrange = T) +
geom_abline(intercept = 0.60205, slope = 0.67977, lty = 3) + # from fitted model below
scale_color_brewer(palette = "Set2") +
theme_test(base_size = 16, base_family = 'Times')
summary(mod_null)
summary(mod_prof)
summary(mod_cond)
summary(mod_add)
summary(mod_int)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency))
head(fafa_c)
fafa_c %>%
mutate(., ifelse(fafa_d = condition == "fafa", 0,
ifelse(fafal_d = condition == "fafal", 1, NA)))
fafa_c %>%
mutate(., ifelse( 'fafa_d' = condition == "fafa", 0,
ifelse( 'fafal_d' = condition == "fafal", 1, NA)))
fafa_c %>%
mutate(., fafa_d = ifelse( condition == "fafa", 0,
fafal_d = ifelse( condition == "fafal", 1, NA)))
fafa_c %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
head(fafa_c, n=4)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
tail(fafa_c)
fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
fafa_c <- fafa_df %>%
mutate(., proficiency_c = proficiency - mean(proficiency)) %>%
mutate(., ifelse( condition == "fafa", 0,
ifelse( condition == "fafal", 1, NA)))
summary(mod_null)$coef
